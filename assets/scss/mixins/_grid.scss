@mixin container-fixed($gutter: $grid-gutter-width) {
    margin-right: auto;
    margin-left: auto;
    padding-left:  floor(($gutter / 2));
    padding-right: ceil(($gutter / 2));
    @include clearfix;

    @include breakpoint(small) { width: $small-width; }
    @include breakpoint(medium) { width: $medium-width; }
    @include breakpoint(large) { width: $large-width; }
    @include breakpoint(xlarge) { width: $xlarge-width; }
}

@mixin make-row($gutter: $grid-gutter-width) {
    margin-left:  ceil(($gutter / -2));
    margin-right: floor(($gutter / -2));
    @include clearfix;
}

@mixin grid-columns($columns, $i: 1, $list: ".grid-#{$i}", $gutter: $grid-gutter-width) {
    @for $i from (1 + 1) through $columns {
        $list: "#{$list}, .grid-#{$i}, .grid-#{$i}l, .grid-#{$i}l, .grid-#{$i}xl";
    }
    #{$list} {
        position: relative;
        float: left;
        // Prevent columns from collapsing when empty
        min-height: 1px;
        // Inner gutter via padding
        padding-left:  floor(($gutter / 2));
        padding-right: ceil(($gutter / 2));
    }
}

@mixin calc-grid-column($index, $type, $point: false) {
    @if ($type == width) and ($index > 0) {
        @if ($point == small){
            .grid-#{$index} {
                width: percentage(($index / $grid-columns));
            }
        }
        @if ($point == medium){
            @include breakpoint(medium){
                .grid-#{$index}m {
                    width: percentage(($index / $grid-columns));
                }
            }
        }
        @if ($point == large){
            @include breakpoint(large){
                .grid-#{$index}l {
                    width: percentage(($index / $grid-columns));
                }
            }
        }
        @if ($point == xlarge){
            @include breakpoint(xlarge){
                .grid-#{$index}xl {
                    width: percentage(($index / $grid-columns));
                }
            }
        }
    }
    @if ($type == offset) {
        @if ($point == small){
            .offset-#{$index} {
                margin-left: percentage(($index / $grid-columns));
            }
        }
        @if ($point == medium){
            @include breakpoint(medium){
                .offset-#{$index}m {
                    margin-left: percentage(($index / $grid-columns));
                }
            }
        }
        @if ($point == large){
            @include breakpoint(large){
                .offset-#{$index}l {
                    margin-left: percentage(($index / $grid-columns));
                }
            }
        }
        @if ($point == xlarge){
            @include breakpoint(xlarge){
                .offset-#{$index}xl {
                    margin-left: percentage(($index / $grid-columns));
                }
            }
        }
    }
}

@mixin loop-grid-columns($columns, $type, $point: false) {
    @for $i from 1 through $columns {
        @include calc-grid-column($i, $type, $point);
    }
}

@mixin make-grid() {
    @include grid-columns($grid-columns);
    @include loop-grid-columns($grid-columns, width, small);
    @include loop-grid-columns($grid-columns, width, medium);
    @include loop-grid-columns($grid-columns, width, large);
    @include loop-grid-columns($grid-columns, width, xlarge);
    @include loop-grid-columns($grid-columns, offset, small);
    @include loop-grid-columns($grid-columns, offset, medium);
    @include loop-grid-columns($grid-columns, offset, large);
    @include loop-grid-columns($grid-columns, offset, xlarge);
}